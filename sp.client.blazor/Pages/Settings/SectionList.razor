@page "/settings-section-list/{RegionId:guid}"
@using sp.iot.core
@inject SettingsClient SettingsClient
 
<h1> <b>@region?.Name</b>  Birim Listesi</h1>

 <table class="table table-striped">
        <thead>
            <tr>
                
                <th>AdÄ±</th>
                <th></th>
                <th>
                </th>
                 <th>Anahtar</th>
            </tr>
        </thead>
        <tbody>
        @if (settings == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var sectionItem in region.Sections)
            {
                <tr>
                    <td><NavLink href="@($"settings/section-modify/{RegionId}/{sectionItem.Id}")">@sectionItem.Name</NavLink></td>                
                    <td><a href="#" class="btn btn-secondary" role="button" aria-pressed="true">Aletler</a> </td>
                    <td><a href="@($"settings/section-delete/{RegionId}/{sectionItem.Id}")" class="btn btn-light" role="button" aria-pressed="true">Sil</a> </td>
                    <td><i>@sectionItem.Id</i></td>
                </tr>
            }
        }
        </tbody>
    </table>

    <a role="button" class="btn btn-primary" href="@($"settings/section-modify/{RegionId}/{Guid.NewGuid()}")">Yeni Birim</a>

    <BackButtonComponent BaseReturnUrl="@($"settings-region-list")" />


    

@code {
    [Parameter]
    public Guid RegionId { get; set; }

    public Region region { get; set; }

    private Settings settings = null;

    protected override async Task OnParametersSetAsync()
    {
        settings = await SettingsClient.GetAsync();
        region = settings.Regions.First(item => item.Id == RegionId);
    }

}
