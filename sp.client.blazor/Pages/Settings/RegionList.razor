@page "/settings-region-list"
@using sp.iot.core
@inject SettingsClient SettingsClient

<h1>Regions</h1>


<table class="table table-striped">
        <thead>
            <tr>
                
                <th>Name</th>
                <th>Type</th>
                <th></th>
                <th>
                </th>

            </tr>
        </thead>
        <tbody>
        @if (settings == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var regionItem in settings.Regions)
            {
                <tr>
                    <td><NavLink href="@($"settings/region-modify/{@regionItem.Id}")">@regionItem.Name</NavLink></td>                
                    <td>@regionItem.Type</td> 
                    <td><a href="@($"settings/section-list/{@regionItem.Id}")" class="btn btn-secondary" role="button" aria-pressed="true">Sections(@regionItem.Sections.Count)</a> </td>
                    <td><a href="@($"settings/region-delete/{@regionItem.Id}")" class="btn btn-light" role="button" aria-pressed="true">Delete</a> </td>
                </tr>
            }
        }
        </tbody>
    </table>

   <a role="button" class="btn btn-primary" href="@($"settings/region-modify/{Guid.NewGuid()}")">New Region</a>

   <BackButtonComponent BaseReturnUrl="@($"/")" />

@code {
    private iot.core.Settings settings = null;

    protected override async Task OnInitializedAsync()
    {
        settings = await SettingsClient.GetAsync();
    }

}
